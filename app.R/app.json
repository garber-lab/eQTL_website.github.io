[{"name":"app.R","content":"#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    http://shiny.rstudio.com/\n#\n\nlibrary(shiny)\nload(file=\"./temp_test.RData\")\n\n# Define UI for application\nui <- fluidPage(\n  \n  # Application title\n  titlePanel(\"Plotting on-demand\"),\n  \n  # Sidebar layout with input and output definitions\n  sidebarLayout(\n    sidebarPanel(\n      # Text input\n      textInput(\"input_gene\", \"Enter gene name:\", \"\"),\n      textInput(\"input_snp\", \"Enter SNP ID:\",\"\"),\n      \n      # Plot button\n      actionButton(\"plot_button\", \"Plot\")\n    ),\n    \n    # Output: Plot\n    mainPanel(\n      plotOutput(\"text_plot\")\n    )\n  )\n)\n\n# Define server logic\nserver <- function(input, output) {\n  #print(\"loading environment\")\n  #dataEnv <- new.env()\n  #load(file=\"temp_test.RData\", envir=dataEnv)\n  #print(\"loaded environment\")\n  \n  # Render plot when plot button is clicked\n  observeEvent(input$plot_button, {\n    print(\"plot button clicked\")\n    gene <- input$input_gene\n    snp <- input$input_snp\n    output$text_plot <- renderPlot({\n      print(\"Calling make_reQTL_plot_CPM_3cts\")\n      plot_gene_expression(table, gene_of_interest = gene_of_interest)\n    })\n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"}]
